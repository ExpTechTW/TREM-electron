{"version":3,"file":"hct_round_trip_test.js","sourceRoot":"","sources":["../../hct/hct_round_trip_test.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;AAEH,OAAO,SAAS,CAAC;AAEjB,OAAO,KAAK,UAAU,MAAM,sBAAsB,CAAC;AAEnD,OAAO,EAAC,GAAG,EAAC,MAAM,OAAO,CAAC;AAE1B,wCAAwC;AAExC,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;IAC7B,EAAE,CAAC,0BAA0B,EAAE,GAAG,EAAE;QAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE;YAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE;gBAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE;oBAChC,MAAM,IAAI,GAAG,UAAU,CAAC,WAAW,CAC/B,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,EAChB,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,EAChB,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CACnB,CAAC;oBAEF,MAAM,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;oBAC9B,MAAM,aAAa,GAAG,GAAG,CAAC,IAAI,CAC1B,GAAG,CAAC,GAAG,EACP,GAAG,CAAC,MAAM,EACV,GAAG,CAAC,IAAI,CACX,CAAC,KAAK,EAAE,CAAC;oBAEV,MAAM,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;iBACrC;aACF;SACF;IACH,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport 'jasmine';\n\nimport * as colorUtils from '../utils/color_utils';\n\nimport {Hct} from './hct';\n\n// Testing 512 out of 16_777_216 colors.\n\ndescribe('HCT roundtrip', () => {\n  it('preserves original color', () => {\n    for (let r = 0; r < 296; r += 37) {\n      for (let g = 0; g < 296; g += 37) {\n        for (let b = 0; b < 296; b += 37) {\n          const argb = colorUtils.argbFromRgb(\n              Math.min(255, r),\n              Math.min(255, g),\n              Math.min(255, b),\n          );\n\n          const hct = Hct.fromInt(argb);\n          const reconstructed = Hct.from(\n              hct.hue,\n              hct.chroma,\n              hct.tone,\n          ).toInt();\n\n          expect(reconstructed).toEqual(argb);\n        }\n      }\n    }\n  });\n});\n"]}