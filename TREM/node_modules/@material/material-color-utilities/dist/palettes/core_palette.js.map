{"version":3,"file":"core_palette.js","sourceRoot":"","sources":["../../palettes/core_palette.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;AAEH,OAAO,EAAC,GAAG,EAAC,MAAM,YAAY,CAAC;AAE/B,OAAO,EAAC,YAAY,EAAC,MAAM,iBAAiB,CAAC;AAE7C;;;;GAIG;AACH,MAAM,OAAO,WAAW;IAetB,YAAoB,IAAY;QAC9B,MAAM,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC9B,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,EAAE,GAAG,YAAY,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;QACvE,IAAI,CAAC,EAAE,GAAG,YAAY,CAAC,gBAAgB,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACjD,IAAI,CAAC,EAAE,GAAG,YAAY,CAAC,gBAAgB,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;QACtD,IAAI,CAAC,EAAE,GAAG,YAAY,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QAChD,IAAI,CAAC,EAAE,GAAG,YAAY,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,gBAAgB,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACrD,CAAC;IAhBD;;OAEG;IACH,MAAM,CAAC,EAAE,CAAC,IAAY;QACpB,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;CAYF","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Hct} from '../hct/hct';\n\nimport {TonalPalette} from './tonal_palette';\n\n/**\n * An intermediate concept between the key color for a UI theme, and a full\n * color scheme. 5 sets of tones are generated, all except one use the same hue\n * as the key color, and all vary in chroma.\n */\nexport class CorePalette {\n  a1: TonalPalette;\n  a2: TonalPalette;\n  a3: TonalPalette;\n  n1: TonalPalette;\n  n2: TonalPalette;\n  error: TonalPalette;\n\n  /**\n   * @param argb ARGB representation of a color\n   */\n  static of(argb: number): CorePalette {\n    return new CorePalette(argb);\n  }\n\n  private constructor(argb: number) {\n    const hct = Hct.fromInt(argb);\n    const hue = hct.hue;\n    this.a1 = TonalPalette.fromHueAndChroma(hue, Math.max(48, hct.chroma));\n    this.a2 = TonalPalette.fromHueAndChroma(hue, 16);\n    this.a3 = TonalPalette.fromHueAndChroma(hue + 60, 24);\n    this.n1 = TonalPalette.fromHueAndChroma(hue, 4);\n    this.n2 = TonalPalette.fromHueAndChroma(hue, 8);\n    this.error = TonalPalette.fromHueAndChroma(25, 84);\n  }\n}\n"]}